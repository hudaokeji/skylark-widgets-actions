{"version":3,"sources":["buttons/Button.js"],"names":["define","Widget","actions","Button","inherit","_construct","parent","prototype","call","this","_elm","style","cursor","preventDragEvents","setColor","baseColor","overColor","backgroundColor","onmouseenter","onmouseleave","setStyles","baseStyle","overStyle","i","buttons"],"mappings":";;;;;;;AAAAA,QACC,8BACA,cACC,SAASC,EAAOC,GACjB,aASA,IAAIC,EAASF,EAAOG,SAEnBC,WAAa,SAAUC,GACtBL,EAAOM,UAAUF,WAAWG,KAAKC,KAAMH,EAAQ,OAE/CG,KAAKC,KAAKC,MAAMC,OAAS,UAEzBH,KAAKI,qBAaNC,SAAW,SAASC,EAAWC,GAC9BP,KAAKC,KAAKC,MAAMM,gBAAkBF,EAElCN,KAAKC,KAAKQ,aAAe,WACxBT,KAAKE,MAAMM,gBAAkBD,GAG9BP,KAAKC,KAAKS,aAAe,WACxBV,KAAKE,MAAMM,gBAAkBF,IAiB/BK,UAAY,SAASC,EAAWC,GAC/B,IAAI,IAAIC,KAAKF,EAEZZ,KAAKC,KAAKC,MAAMY,GAAKF,EAAUE,GAGhCd,KAAKC,KAAKQ,aAAe,WACxB,IAAI,IAAIK,KAAKD,EAEZb,KAAKE,MAAMY,GAAKD,EAAUC,IAI5Bd,KAAKC,KAAKS,aAAe,WACxB,IAAI,IAAII,KAAKF,EACZZ,KAAKE,MAAMY,GAAKF,EAAUE,OAM9B,OAAOrB,EAAQsB,QAAQrB,OAASA","file":"../../buttons/Button.js","sourcesContent":["define([\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"../actions\"\t\r\n],function(Widget,actions){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Base button class.\r\n\t * \r\n\t * @class Button\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\tvar Button = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tthis._elm.style.cursor = \"pointer\";\r\n\r\n\t\t\tthis.preventDragEvents();\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set button color.\r\n\t\t * \r\n\t\t * When mouse is over the button uses the overColor, when the mouse gets outside of the button it uses the base color.\r\n\t\t * \r\n\t\t * @method setColor\r\n\t\t * @param {String} baseColor CSS color for the button background.\r\n\t\t * @param {String} overColor CSS color for the button when mouse is over it.\r\n\t\t */\r\n\t\tsetColor : function(baseColor, overColor){\r\n\t\t\tthis._elm.style.backgroundColor = baseColor;\r\n\r\n\t\t\tthis._elm.onmouseenter = function()\t{\r\n\t\t\t\tthis.style.backgroundColor = overColor;\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseleave = function()\t{\r\n\t\t\t\tthis.style.backgroundColor = baseColor;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set button styles, the style can be descriped in a object.\r\n\t\t *\r\n\t\t * Here is an exaple of a style object:\r\n\t\t * {\r\n\t\t * backgroundColor: \"#FF0000\",\r\n\t\t * color: \"#FFFFFF\"\r\n\t\t * }\r\n\t\t *\r\n\t\t * @method setColor\r\n\t\t * @param {Object} baseStyle Object with the style to be applied as base.\r\n\t\t * @param {Object} overStyle Object with the style to be applied when mouse is over.\r\n\t\t */\r\n\t\tsetStyles : function(baseStyle, overStyle)\t{\r\n\t\t\tfor(var i in baseStyle)\r\n\t\t\t{\r\n\t\t\t\tthis._elm.style[i] = baseStyle[i];\r\n\t\t\t}\r\n\r\n\t\t\tthis._elm.onmouseenter = function()\t{\r\n\t\t\t\tfor(var i in overStyle)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.style[i] = overStyle[i];\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseleave = function()\t{\r\n\t\t\t\tfor(var i in baseStyle)\t{\r\n\t\t\t\t\tthis.style[i] = baseStyle[i];\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\treturn actions.buttons.Button = Button;\r\n});"]}