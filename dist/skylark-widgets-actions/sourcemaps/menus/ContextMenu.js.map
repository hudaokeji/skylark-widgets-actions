{"version":3,"sources":["menus/ContextMenu.js"],"names":["define","Vector2","geom","Widget","actions","ButtonMenu","DropdownMenu","ContextMenu","inherit","_construct","parent","prototype","call","this","self","_elm","style","overflow","zIndex","onmouseleave","destroy","offset","options","setText","text","removeOption","index","length","splice","addOption","name","callback","button","setAlignment","Text","LEFT","position","x","setOnClick","push","addMenu","menu","setDirection","showArrow","setMargin","updateOptions","i","size","copy","set","y","updateInterface","updateSize","width","height","updatePosition","top","left","out","testAxis","menus"],"mappings":";;;;;;;AAAAA,QACC,iCACA,oBACA,8BACA,aACA,eACA,kBACC,SACDC,EACAC,EAEAC,EACAC,EACAC,EACAC,GAEA,aASA,IAAIC,EAAcJ,EAAOK,SAExBC,WAAa,SAAUC,GACtBP,EAAOQ,UAAUF,WAAWG,KAAKC,KAAMH,EAAQ,OAE/C,IAAII,EAAOD,KAEXA,KAAKE,KAAKC,MAAMC,SAAW,UAC3BJ,KAAKE,KAAKC,MAAME,OAAS,MACzBL,KAAKE,KAAKI,aAAe,WACxBL,EAAKM,WAGNP,KAAKQ,OAAS,IAAIpB,EAAQ,GAAI,IAQ9BY,KAAKS,YAUNC,QAAU,SAASC,GAClBX,KAAKW,KAAKD,QAAQC,IASnBC,aAAe,SAASC,GACpBA,GAAS,GAAKA,EAAQb,KAAKS,QAAQK,SACrCd,KAAKS,QAAQI,GAAON,UACpBP,KAAKS,QAAQM,OAAOF,EAAO,KAW7BG,UAAY,SAASC,EAAMC,GAC1B,IAAIC,EAAS,IAAI3B,EAAWQ,MAC5BmB,EAAOjB,KAAKC,MAAME,OAAS,QAC3Bc,EAAOT,QAAQO,GACfE,EAAOC,aAAaC,KAAKC,MACzBH,EAAOI,SAASC,EAAI,GAEpB,IAAIvB,EAAOD,KACXmB,EAAOM,WAAW,WACjBP,IACAjB,EAAKM,YAGNP,KAAKS,QAAQiB,KAAKP,IAUnBQ,QAAU,SAASV,GAClB,IAAIW,EAAO,IAAInC,EAAaO,MAS5B,OARA4B,EAAKlB,QAAQO,GACbW,EAAKC,aAAapC,EAAa6B,MAC/BM,EAAKE,YACLF,EAAKR,aAAaC,KAAKC,MACvBM,EAAKG,UAAU,IAEf/B,KAAKS,QAAQiB,KAAKE,GAEXA,GAQRI,cAAgB,WACf,IAAI,IAAIC,EAAI,EAAGA,EAAIjC,KAAKS,QAAQK,OAAQmB,IAEvCjC,KAAKS,QAAQwB,GAAGC,KAAKC,KAAKnC,KAAKkC,MAC/BlC,KAAKS,QAAQwB,GAAGV,SAASa,IAAI,EAAGpC,KAAKkC,KAAKG,EAAIJ,GAC9CjC,KAAKS,QAAQwB,GAAGK,mBAIlBC,WAAa,WACZvC,KAAKE,KAAKC,MAAMqC,MAAQxC,KAAKkC,KAAKV,EAAI,KACtCxB,KAAKE,KAAKC,MAAMsC,OAAUzC,KAAKkC,KAAKG,EAAIrC,KAAKS,QAAQK,OAAU,KAE/Dd,KAAKgC,iBAGNU,eAAiB,WAChB1C,KAAKE,KAAKC,MAAMwC,IAAO3C,KAAKuB,SAASc,EAAIrC,KAAKQ,OAAO6B,EAAK,KAC1DrC,KAAKE,KAAKC,MAAMyC,KAAQ5C,KAAKuB,SAASC,EAAIxB,KAAKQ,OAAOgB,EAAK,KAK3D,IAAIqB,EAAMxD,EAAKyD,SAAS9C,KAAKE,MAChB,IAAV2C,EAAIrB,IAENxB,KAAKE,KAAKC,MAAMyC,KAAQ5C,KAAKuB,SAASC,EAAIxB,KAAKQ,OAAOgB,EAAIxB,KAAKkC,KAAKV,EAAK,MAE7D,IAAVqB,EAAIR,IAENrC,KAAKE,KAAKC,MAAMwC,IAAO3C,KAAKuB,SAASc,EAAIrC,KAAKQ,OAAO6B,EAAIQ,EAAIR,EAAK,SAMrE,OAAO9C,EAAQwD,MAAMrD,YAAcA","file":"../../menus/ContextMenu.js","sourcesContent":["define([\n\t\"skylark-langx-numerics/Vector2\",\n\t\"skylark-domx-geom\",\n\t\"skylark-widgets-base/Widget\",\n\t\"../actions\",\n\t\"./ButtonMenu\",\n\t\"./DropdownMenu\"\n],function(\n\tVector2,\n\tgeom,\n\n\tWidget,\n\tactions,\n\tButtonMenu,\n\tDropdownMenu\n){\n\t\"use strict\";\n\n\t/**\n\t * Context menu widget.\n\t * \n\t * @class ContextMenu\n\t * @extends {Widget}\n\t * @param {Widget} parent Parent widget.\n\t */\n\tvar ContextMenu = Widget.inherit({\n\n\t\t_construct : function (parent) {\t\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\n\n\t\t\tvar self = this;\n\n\t\t\tthis._elm.style.overflow = \"visible\";\n\t\t\tthis._elm.style.zIndex = \"300\";\n\t\t\tthis._elm.onmouseleave = function()\t{\n\t\t\t\tself.destroy();\n\t\t\t};\n\n\t\t\tthis.offset = new Vector2(20, 10);\n\t\t\t\n\t\t\t/**\n\t\t\t * Options in this menu.\n\t\t\t * \n\t\t\t * @attribute options\n\t\t\t * @type {Array}\n\t\t\t */\n\t\t\tthis.options = [];\n\t\t},\n\n\n\t\t/**\n\t\t * Set the text of this context menu.\n\t\t * \n\t\t * @method setText\n\t\t * @param {String} text\n\t\t */\n\t\tsetText : function(text) {\n\t\t\tthis.text.setText(text);\n\t\t},\n\n\t\t/**\n\t\t * Remove option from context menu.\n\t\t *\n\t\t * @method removeOption\n\t\t * @param {Number} index\n\t\t */\n\t\tremoveOption : function(index) {\n\t\t\tif(index >= 0 && index < this.options.length)\t{\n\t\t\t\tthis.options[index].destroy();\n\t\t\t\tthis.options.splice(index, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add new option to context menu\n\t\t *\n\t\t * @method addOption\n\t\t * @param {String} name of the option\n\t\t * @param {Function} callback Callback function\n\t\t */\n\t\taddOption : function(name, callback) {\n\t\t\tvar button = new ButtonMenu(this);\n\t\t\tbutton._elm.style.zIndex = \"10000\";\n\t\t\tbutton.setText(name);\n\t\t\tbutton.setAlignment(Text.LEFT);\n\t\t\tbutton.position.x = 25;\n\n\t\t\tvar self = this;\n\t\t\tbutton.setOnClick(function(){\n\t\t\t\tcallback();\n\t\t\t\tself.destroy();\n\t\t\t});\n\n\t\t\tthis.options.push(button);\n\t\t},\n\n\t\t/**\n\t\t * Add new menu to context menu\n\t\t *\n\t\t * @method addOption\n\t\t * @param {String} name of the option.\n\t\t * @return {DropdownMenu} The new menu created.\n\t\t */\n\t\taddMenu : function(name) {\n\t\t\tvar menu = new DropdownMenu(this);\n\t\t\tmenu.setText(name);\n\t\t\tmenu.setDirection(DropdownMenu.LEFT);\n\t\t\tmenu.showArrow();\n\t\t\tmenu.setAlignment(Text.LEFT);\n\t\t\tmenu.setMargin(25);\n\n\t\t\tthis.options.push(menu);\n\n\t\t\treturn menu;\n\t\t},\n\n\t\t/**\n\t\t * Update all options in the menu.\n\t\t * \n\t\t * @method updateOptions\n\t\t */\n\t\tupdateOptions : function() {\n\t\t\tfor(var i = 0; i < this.options.length; i++)\n\t\t\t{\n\t\t\t\tthis.options[i].size.copy(this.size);\n\t\t\t\tthis.options[i].position.set(0, this.size.y * i);\n\t\t\t\tthis.options[i].updateInterface();\n\t\t\t}\n\t\t},\n\n\t\tupdateSize : function()\t{\n\t\t\tthis._elm.style.width = this.size.x + \"px\";\n\t\t\tthis._elm.style.height = (this.size.y * this.options.length) + \"px\";\n\n\t\t\tthis.updateOptions();\n\t\t},\n\n\t\tupdatePosition : function() {\n\t\t\tthis._elm.style.top = (this.position.y - this.offset.y) + \"px\";\n\t\t\tthis._elm.style.left = (this.position.x - this.offset.x) + \"px\";\n\n\t\t\t//Check if its inside window\n\t\t\t\n\t\t\t//var out = DOMUtils.checkBorder(this._elm);\n\t\t\tvar out = geom.testAxis(this._elm);\n\t\t\tif(out.x !== 0)\n\t\t\t{\n\t\t\t\tthis._elm.style.left = (this.position.x + this.offset.x - this.size.x) + \"px\"; \n\t\t\t}\n\t\t\tif(out.y !== 0)\n\t\t\t{\n\t\t\t\tthis._elm.style.top = (this.position.y - this.offset.y - out.y) + \"px\";\n\t\t\t}\n\n\t\t}\n\t});\n\n\treturn actions.menus.ContextMenu = ContextMenu;\n});"]}