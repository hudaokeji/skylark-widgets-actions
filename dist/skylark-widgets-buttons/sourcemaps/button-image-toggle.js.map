{"version":3,"sources":["button-image-toggle.js"],"names":["define","buttons","ButtonImage","ButtonImageToggle","inherit","_construct","parent","prototype","call","this","_elm","style","display","justifyContent","alignItems","skin","getSkin","backgroundColor","buttonColor","selected","self","onclick","onmouseenter","element","buttonOverColor","onmouseleave","setSelected","setOnClick","callback"],"mappings":";;;;;;;AAAAA,QACC,YACA,kBACC,SAASC,EAAQC,GAClB,aASA,IAAIC,EAAoBD,EAAYE,SAEnCC,WAAa,SAAUC,GACtBJ,EAAYK,UAAUF,WAAWG,KAAKC,KAAMH,GAE5CG,KAAKC,KAAKC,MAAMC,QAAU,OAC1BH,KAAKC,KAAKC,MAAME,eAAiB,SACjCJ,KAAKC,KAAKC,MAAMG,WAAa,SAC7B,IAAIC,EAAON,KAAKO,UAEhBP,KAAKC,KAAKC,MAAMM,gBAAkBF,EAAKG,YAEvCT,KAAKU,UAAW,EAGhB,IAAIC,EAAOX,KACXA,KAAKC,KAAKW,QAAU,WAEnBD,EAAKD,UAAYC,EAAKD,UAIvBV,KAAKC,KAAKY,aAAe,WAExBF,EAAKG,QAAQZ,MAAMM,gBAAkBF,EAAKS,iBAG3Cf,KAAKC,KAAKe,aAAe,WACpBL,EAAKD,WAERC,EAAKG,QAAQZ,MAAMM,gBAAkBF,EAAKG,eAY7CQ,YAAc,SAASP,GACtBV,KAAKU,SAAWA,EAChB,IAAIJ,EAAON,KAAKO,UAEhBP,KAAKC,KAAKC,MAAMM,gBAAkBR,KAAKU,SAAWJ,EAAKS,gBAAkBT,EAAKG,aAQ/ES,WAAa,SAASC,GACrB,IAAIR,EAAOX,KACXA,KAAKC,KAAKW,QAAU,WACnBD,EAAKD,UAAYC,EAAKD,SACtBS,QAKH,OAAO3B,EAAQE,kBAAoBA","file":"../button-image-toggle.js","sourcesContent":["define([\r\n\t\"./buttons\",\r\n\t\"./button-image\"\r\n],function(buttons,ButtonImage){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * A image button that can be toggled.\r\n\t * \r\n\t * @class ButtonImageToggle\r\n\t * @extends {ButtonImage}\r\n\t * @param {Element} parent Parent element.\r\n\t */\r\n\tvar ButtonImageToggle = ButtonImage.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tButtonImage.prototype._construct.call(this, parent);\r\n\r\n\t\t\tthis._elm.style.display = \"flex\";\r\n\t\t\tthis._elm.style.justifyContent = \"center\";\r\n\t\t\tthis._elm.style.alignItems = \"center\";\r\n\t\t\tvar skin = this.getSkin();\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.buttonColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.buttonColor;\r\n\r\n\t\t\tthis.selected = false;\r\n\r\n\t\t\t//Click event\r\n\t\t\tvar self = this;\r\n\t\t\tthis._elm.onclick = function()\r\n\t\t\t{\r\n\t\t\t\tself.selected = !self.selected;\r\n\t\t\t};\r\n\r\n\t\t\t//Mouse over and mouse out events\r\n\t\t\tthis._elm.onmouseenter = function() {\r\n\t\t\t\t//self.element.style.backgroundColor = Editor.theme.buttonOverColor;\r\n\t\t\t\tself.element.style.backgroundColor = skin.buttonOverColor;\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseleave = function() {\r\n\t\t\t\tif(!self.selected) {\r\n\t\t\t\t\t//self.element.style.backgroundColor = Editor.theme.buttonColor;\r\n\t\t\t\t\tself.element.style.backgroundColor = skin.buttonColor;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set the seleted state of the toggle button.\r\n\t\t * \r\n\t\t * @method setSelected\r\n\t\t * @param {Boolean} selected\r\n\t\t */\r\n\t\tsetSelected : function(selected) {\r\n\t\t\tthis.selected = selected;\r\n\t\t\tvar skin = this.getSkin();\r\n\t\t\t//this._elm.style.backgroundColor = this.selected ? Editor.theme.buttonOverColor : Editor.theme.buttonColor;\r\n\t\t\tthis._elm.style.backgroundColor = this.selected ? skin.buttonOverColor : skin.buttonColor;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set button callback function.\r\n\t\t *\r\n\t\t * @method setOnClick\r\n\t\t */\r\n\t\tsetOnClick : function(callback) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis._elm.onclick = function() \t{\r\n\t\t\t\tself.selected = !self.selected;\r\n\t\t\t\tcallback();\t\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\treturn buttons.ButtonImageToggle = ButtonImageToggle;\r\n});"]}